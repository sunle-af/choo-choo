import { useEffect, useState } from 'react';
import {  Text, TextInput,Alert,Modal,Image, View,StyleSheet,Pressable,FlatList, TouchableOpacity,Dimensions, Button, ImageBackground } from 'react-native';
import { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';
import { gql } from "@apollo/client";
import { useQuery,useMutation } from "@apollo/client";

const GRAPHQL_URL = 'http://localhost:9000/';

const client = new ApolloClient({
    uri: GRAPHQL_URL,
    cache: new InMemoryCache()
  });

export const GREETINGS_QUERY = gql`
 query GetAllUserData{
  userData{
  id
  name
  mobileNumber
  }
}
`;
 

const IMAGE_URI = require('../../assets/images/2.jpg')
function HomeScreen() {
    const { data, loading } = useQuery(GREETINGS_QUERY); //execute query
    if (loading) {
        // return  alert("LOADING....") 
        return(
        <View style={{justifyContent:'space-around',
        alignItems:'center'}}><Text>LOADING.,....</Text></View>
        )
    }
    function display(){
      alert(data.userData[0].name)
    }
  return (
           <TouchableOpacity 
           onPress={display}
           style={{borderWidth:1,borderColor:'white', padding:20,borderRadius:20, backgroundColor:'rgba(152, 223, 214, 0.1)',justifyContent:'space-around',alignItems:'center'}} >
            <Text style={{fontWeight:'bold',color:'white' , letterSpacing:1}}>Check Server</Text>
           </TouchableOpacity>
  );
  }

export default function TestPage(){
      const [message, setMessage] = useState(null);
      const [createUser, { loading, error }] = useMutation(gql`
        mutation CreateUserMutation($input: CreateJobInput!) {
          createUser(input: $input) {
            text
          }
        }
      `);

      const handleCreateUser = () => {
        const input = {
          "id":"IDoo1",
          "name":"dummyName",
          "mobileNumber":"9772814843"
        };
        createUser({ variables: { input } })
          .then((result) => {
            setMessage(result.data.createUser.text);
          })
          .catch((err) => {
            console.log(err);
            setMessage('An error occurred while creating the user.');
          });
      };
   return( 
    <ApolloProvider client={client}>
            <ImageBackground 
            blurRadius={5}
            source={IMAGE_URI}
            style={styles.container}>
            {/* <HomeScreen /> */}
            <TouchableOpacity 
            onPress={handleCreateUser}
            style={styles.btnStyle} >
              <Text style={{color:'white'}}>POST SOME DUMMY DATA</Text>
            </TouchableOpacity>
            
      {loading && <Text>Loading...</Text>}
      {error && <Text>An error occurred while creating the user.</Text>}
      {message && <Text>{message}</Text>}
            </ImageBackground>
    </ApolloProvider>
    )
}

 
const styles = StyleSheet.create({
 container:{
    flex:1,
    padding:50,
    backgroundColor:'black',
    justifyContent:'space-around',
    alignItems:'center'
  },
  title:{
    color:'white',
    fontSize:22,
  },
  btnStyle:{
    borderWidth:1,borderColor:'white', padding:20,borderRadius:20, backgroundColor:'rgba(152, 223, 214, 0.1)',justifyContent:'space-around',alignItems:'center'
  },
  inputContainer:{
    alignSelf:'center',
    alignItems:"center",
    justifyContent:"space-around",
    width:"100%",
    paddingVertical:50,
  },
  txtInput:{
    padding:10,
    margin:10,
    width:"60%",
    borderColor:'black',
    borderWidth:0.5,
    borderRadius:10,
  }

})